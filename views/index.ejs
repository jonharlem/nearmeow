<!DOCTYPE html>
<html>
  <head>
    <title><%= title %></title>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css">
    <link rel='stylesheet' href='/stylesheets/style.css' />
    <script src="//code.jquery.com/jquery-1.12.0.min.js"></script>
    <script type="text/javascript">
  $(document).ready(function() {
    $('#how-it-works').attr('data-hidden', true);
    $("#how-it-works").hide();
    $('#map-view').attr('data-hidden', true);
    $("#map-view").hide();
    $("#howButton").click(function() {
      // $("#landing-wrapper").css({height:150%})
      $("#how-it-works").show(1000);
      $('#how-it-works').attr('data-hidden', false);
    });

    $("#pac-input").attr('can-search', false);

    $("#pac-input").click(function() {
      if($("#pac-input").attr('can-search') ==='false') {
        initMap();
        $("#homepage").hide(1000);
        $('#how-it-works').attr('data-hidden', false);
        $("#lower-banner").prependTo("#map-view");
        
        $("#map-view").show();
        $("#lower-banner").css("bottom", "").css("height", "100px").css("position", "fixed").css("top", "0");
        $("#question").css("margin-top", "");
        $("#pac-input").attr('can-search', true);
        // $("#pac-logo").css("top","0");
      }
      
    })



    $(window).scroll( function(){
      /* Check the location of the element */
        $('#how-it-works').each(function(i){

          var top_of_window = $(window).scrollTop();

          /* If the object is completely visible in the window, fade it in */
          if(top_of_window > 395 && $('#how-it-works').attr('data-hidden')==='false'){
            $(this).hide();
            $(window).scrollTop(0);
            $('#how-it-works').attr('data-hidden', true);
          }

        }); 

      });
    $("#hide").click(function(){
        $("#how-it-works").hide(1000);
    });



  })

  // $('#pac-container').css('position','top:-100px;')
</script>

  </head>
  <body> 
    <!-- HIDDEN HOW TO SECTION -->
    <div> 
      <section id="how-it-works" >
      <!-- close hidden how to section -->
        <div id="howparent">
          <div class="howchild">
            <i class="fa fa-search fa-5x"></i>
            <h1>search</h1>
            <p>enter your choice</p>
          </div>
          <div class="howchild">
            <i class="fa fa-check-circle-o fa-5x"></i>
            <h1>vote</h1>
            <p>submit your vote</p>
          </div>
          <div class="howchild">
            <i class="fa fa-map-o fa-5x"></i>
            <h1>see</h1>
            <p>find out what everyone else thinks</p>
          </div>
        </div>
        <button id="hide">X</button>
      </section>
    </div>

  <div id="homepage" style="height: 100vh" > 
    <header>
      <div id="navbar" class="overlay">
        <div>
          <a  id="nearMeow" href="#">near meow</a>
          <% if (user) { %>
            <%= user %>
          <% } %>
        </div>
        <div>
          <a id="about" href="/about">about</a>
        </div>
      </div>
    </header>
    <!-- CREATE A WRAPPER DIV FOR THe FiRST WINDOW -->
    <div id="landing-wrapper">
      <div id="slogan" class="middle">
          <span>The best </span> 
          <input id="maininput" size="8" value="" type="text">
          <span> near me now.<span>
      </div>
      <div class="middle" >
        <button id="howButton">How It Works</button>
      </div>
    </div>

    <div id="lower-banner" style="position: absolute; bottom: 0; height: 150px;" >
      <p id="question" style="margin-top: 40px;" >My favorite <span><%= categoryName %></span> in <span>San Francisco</span> is <input id="pac-input" class="controls" type="text" placeholder="enter your favorite"><button id="voteButton">VOTE</button></p>
    </div>

  </div>

  <!-- MAP VIEW -->
  <div id="map-view">
    <div id="google-maps">
      <div id="map"></div>

    <script>
      function initMap() {
        var styleArray = [{
          "featureType": "administrative",
          "elementType": "labels",
          "stylers": [{"visibility": "on"}]
          }, {
          "featureType": "landscape",
          "elementType": "all",
          "stylers": [{"visibility": "on"}]
          }, {
          "featureType": "poi",
          "elementType": "labels",
          "stylers": [{"visibility": "off"}]
          }, {
          "featureType": "road",
          "elementType": "all",
          "stylers": [{"visibility": "simplified"},
                      {"lightness": "45"}]
          }, {
          "featureType": "road",
          "elementType": "labels",
          "stylers": [{"visibility": "off"}]
          }, {
          "featureType": "transit",
          "elementType": "all",
          "stylers": [{"visibility": "off"}]
          }];
        var map = new google.maps.Map(document.getElementById('map'), {
          center: {lat: 37.783, lng: -122.416},
          zoom: 13,
          disableDefaultUI: true,
          styles: styleArray
        });
        var input = /** @type {!HTMLInputElement} */(document.getElementById('pac-input'));
        var types = document.getElementById('type-selector');
        map.controls[google.maps.ControlPosition.TOP_LEFT].push(types);
        var autocomplete = new google.maps.places.Autocomplete(input);
        autocomplete.bindTo('bounds', map);
        var infowindow = new google.maps.InfoWindow();
        var marker = new google.maps.Marker({
          map: map,
          anchorPoint: new google.maps.Point(0, -29)
        });
        autocomplete.addListener('place_changed', function() {
          infowindow.close();
          marker.setVisible(false);
          var place = autocomplete.getPlace();
          if (!place.geometry) {
            window.alert("Autocomplete's returned place contains no geometry");
            return;
          }
          if (place.geometry.viewport) {
            map.fitBounds(place.geometry.viewport);
          } else {
            map.setCenter(place.geometry.location);
            map.setZoom(17);
          }
          marker.setIcon(/** @type {google.maps.Icon} */({
            url: place.icon,
            size: new google.maps.Size(71, 71),
            origin: new google.maps.Point(0, 0),
            anchor: new google.maps.Point(17, 34),
            scaledSize: new google.maps.Size(35, 35)
          }));
          marker.setPosition(place.geometry.location);
          marker.setVisible(true);
          var address = '';
          if (place.address_components) {
            address = [
              (place.address_components[0] && place.address_components[0].short_name || ''),
              (place.address_components[1] && place.address_components[1].short_name || ''),
              (place.address_components[2] && place.address_components[2].short_name || '')
            ].join(' ');
          }
          infowindow.setContent('<div><strong>' + place.name + '</strong><br>' + address + '<br><br>' + 'Click VOTE Button to Vote');
          infowindow.open(map, marker);
          var submitButton = $('#voteButton');  
          submitButton.attr('hidden', false);
          submitButton.click(function() {
            submitButton.hide();
            submitButton.attr('hidden', true);
            $.ajax({
              method: "POST",
              url: '/vote',
              data: {data: JSON.stringify(place)},
            }).done(function(response){
              console.log('successful ajax request');
              console.log('response', response);
              var votes = response;
              var markers = [];
        var image = {
          url: 'cat.png',
          // This marker is 20 pixels wide by 32 pixels high.
          size: new google.maps.Size(30, 53),
          // The origin for this image is (0, 0).
          origin: new google.maps.Point(0, 0)
          // The anchor for this image is the base of the flagpole at (0, 32).
        };
        // Shapes define the clickable region of the icon. The type defines an HTML
        // <area> element 'poly' which traces out a polygon as a series of X,Y points.
        // The final coordinate closes the poly by connecting to the first coordinate.
              function drop() {
                for (var i = 0; i < votes.length; i++) {
                  addMarkerWithTimeout(votes[i], i * 100);
                }
              }
              function addMarkerWithTimeout(position, timeout) {
                window.setTimeout(function() {
                  markers.push(new google.maps.Marker({
                    position: position,
                    map: map,
                    animation: google.maps.Animation.DROP,
                    icon:image
                  }));
                }, timeout);
              }
              drop();
              var bounds = new google.maps.LatLngBounds();
              bounds.extend(new google.maps.LatLng(37.803, -122.518));
              bounds.extend(new google.maps.LatLng(37.726466, -122.38));
              map.fitBounds(bounds);
            });
          })
        });
      }
      </script>

    </div>
 
  </div>


<script src="https://maps.googleapis.com/maps/api/js?key=<% gmapsBrowserKey %>&libraries=places"></script>
<script src="/js/typed.js"></script>
<script>
  $(function(){
          $("#maininput").typed({
            strings: ["pizza^1000", "cafe^1000", "park^1000", "bike ride^1000", "bar^1000", "hike^1000", "bakery^1000", "cupcake^1000", "pub^1000", "food truck^1000", "dim sum^1000", "sandwich^1000", "museum^1000", "burger^1000", "club^1000", "pho^1000", "burrito^1000", "gym^1000", "karaoke^1000", "sushi^1000"],
            typeSpeed: 200,
            showCursor: true,
            cursorChar: "|",
            loop: true
          });
  });
</script>
</body>
</html>